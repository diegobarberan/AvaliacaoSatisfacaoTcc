@model IEnumerable<AvaliacaoDesempenho.Models.Matricula>
@{
    ViewData["Title"] = "Acompanhar avaliação por turma.";
}
<div class="text-center">
    <h1>@ViewBag.Title</h1>
    @using (Html.BeginForm("PorTurma", "Matriculas", FormMethod.Get))
    {
        <p>
            <select name="id" id="id" asp-items="ViewBag.Turma"></select>
            <input type="submit" value="Procurar" />
        </p>
        <hr />
    }
    @if (ViewBag.TotalRespondido != null && Model != null)
    {
        decimal respondido = ViewBag.TotalRespondido;
        decimal naoRespondido = ViewBag.TotalNaoRespondido;
        decimal total = respondido + naoRespondido;
        decimal porcResp = respondido * (100 / total);
        decimal porcNaoResp = naoRespondido * (100 / total);
        <p class="h4">@ViewBag.NomeTurma</p>
        <div class="row">
            <div class="col-12 col-md-6">
                <p>Total respondido: <strong>@ViewBag.TotalRespondido (@porcResp.ToString("N2") %)</strong></p>
                <p>Total não respondido: <strong>@ViewBag.TotalNaoRespondido (@porcNaoResp.ToString("N2") %)</strong></p>
                <canvas id="grafico"></canvas>
            </div>
            <div class="col-12 col-md-6">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.EmailInst)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ControleAvaliacao)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            string selectRow = "";
                            if (item.ControleAvaliacao == true)
                            {
                                selectRow = "item-selecionado";
                            }
                            else
                            {
                                selectRow = "item-vermelho";
                            }
                            <tr class="@selectRow">
                                <td>
                                    @Html.DisplayFor(modelItem => item.EmailInst)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ControleAvaliacao)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>
@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>
    <script>
        var ctx = document.getElementById('grafico').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Total respondido', 'Total não respondido'],
                datasets: [{
                    label: '# of Votes',
                    data: [@ViewBag.TotalRespondido, @ViewBag.TotalNaoRespondido],
                    backgroundColor: [
                        '#489bd9',
                        '#f11616'
                    ],
                    borderColor: [
                        '#489bd9',
                        '#f11616'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
}